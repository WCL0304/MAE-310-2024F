R = 0.3; // 设置变量R的值为0.3，可能用于定义圆的半径
L = 1.0; // 设置变量L的值为1.0，可能用于定义正方形的边长

// 定义点
Point(1) = {L, -L, 0}; // 创建点1，坐标为(L, -L, 0)
Point(2) = {L, L, 0};  // 创建点2，坐标为(L, L, 0)
Point(3) = {-L, L, 0}; // 创建点3，坐标为(-L, L, 0)
Point(4) = {-L, -L, 0}; // 创建点4，坐标为(-L, -L, 0)
Point(5) = {-L + R, -L, 0}; // 创建点5，坐标为(-L + R, -L, 0)
Point(6) = {-L, -L + R, 0}; // 创建点6，坐标为(-L, -L + R, 0)
Point(7) = {-L + Cos(Pi/4) * R, -L + Sin(Pi/4) * R, 0}; // 创建点7，坐标为(-L + R*cos(45°), -L + R*sin(45°), 0)

// 定义圆
Circle(1) = {5, 4, 7}; // 创建圆1，通过点5、4和7定义
Circle(2) = {7, 4, 6}; // 创建圆2，通过点7、4和6定义

// 定义线
Line(3) = {6, 3}; // 创建线3，连接点6和点3
Line(4) = {3, 2}; // 创建线4，连接点3和点2
Line(5) = {2, 1}; // 创建线5，连接点2和点1
Line(6) = {1, 5}; // 创建线6，连接点1和点5
Line(7) = {2, 7}; // 创建线7，连接点2和点7

// 定义曲线环
Curve Loop(1) = {4, 7, 2, 3}; // 创建曲线环1，包含线4、7、2和3
Plane Surface(1) = {1}; // 创建平面表面1，由曲线环1定义

Curve Loop(2) = {7, -1, -6, -5}; // 创建曲线环2，包含线7、圆1的反向、线6的反向和线5的反向
Plane Surface(2) = {2}; // 创建平面表面2，由曲线环2定义

// 设置线的网格划分
Transfinite Line{1, 2, 3, 4, 5, 6, 7} = 3; // 将线1、2、3、4、5、6和7的网格划分为3段

// 设置表面的网格划分
Transfinite Surface{1}; // 对表面1进行网格划分
Transfinite Surface{2}; // 对表面2进行网格划分

// 重新组合表面，确保网格是四边形的
Recombine Surface{1}; // 重新组合表面1的网格
Recombine Surface{2}; // 重新组合表面2的网格

// 设置网格参数
Mesh.ElementOrder = 1; // 设置网格元素为一阶（线性元素）
Mesh.Algorithm = 8;    // 设置网格算法为算法8（2D网格算法）

// EOF